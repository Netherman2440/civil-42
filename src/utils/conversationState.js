export class ConversationState {
    constructor(id = null) {
      this.id = id || this.generateId();
      this.messages = [];
      this.scenario = ""; // Will contain scenario description
      this.summary = ""; // Will be generated by AI after conversation
      this.report = ""; // Will be generated by AI as official report
      this.title = "";  //this will be generated by AI as title of the conversation
      this.startTime = new Date();
      this.endTime = null;
    }
  
    generateId() {
      return Date.now().toString(36) + Math.random().toString(36).substring(2);
    }
  
    addMessage(message, isUser) {
      this.messages.push({
        text: message,
        isUser: isUser,
        timestamp: new Date()
      });
    }
  
    setScenario(scenario) {
      this.scenario = scenario;
    }
  
    setSummary(summary) {
      this.summary = summary;
    }
  
    setReport(report) {
      this.report = report;
    }

    setTitle(title) {
      this.title = title;
    }
  
    endConversation() {
      this.endTime = new Date();
    }
  
    getDuration() {
      const end = this.endTime || new Date();
      return Math.floor((end - this.startTime) / 1000); // Duration in seconds
    }

    getTranscription() {
        return this.messages.map(message => {
            const speaker = message.isUser ? "User" : "Operator AI";
            return `${speaker}: ${message.text}`;
        }).join("\n");
    }
  }